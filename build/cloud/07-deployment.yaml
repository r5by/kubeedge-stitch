apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    k8s-app: kubeedge
    kubeedge: edgecontroller
  name: edgecontroller
  namespace: kubeedge
spec:
  selector:
    matchLabels:
      k8s-app: kubeedge
      kubeedge: edgecontroller
  template:
    metadata:
      annotations:
        container.apparmor.security.beta.kubernetes.io/edgecontroller: unconfined
      labels:
        k8s-app: kubeedge
        kubeedge: edgecontroller
    spec:
      initContainers:
      - name: kubeconfig
        image: alpine:3.9
        volumeMounts:
        - name: kubeconfig
          mountPath: /etc/kubeedge/cloud
        args:
        - /bin/sh
        - -c
        - |
          apk --update add --no-cache coreutils && cat | tee /etc/kubeedge/cloud/kubeconfig.yaml <<EOF
          apiVersion: v1
          kind: Config
          clusters:
          - name: kubeedge
            cluster:
              certificate-authority-data: $(cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt | base64 -w 0)
          users:
          - name: kubeedge
            user:
              token: $(cat /var/run/secrets/kubernetes.io/serviceaccount/token)
          contexts:
          - name: kubeedge
            context:
              cluster: kubeedge
              user: kubeedge
          current-context: kubeedge
          EOF
      containers:
      - name: edgecontroller
        image: r5by/kubeedge_edgecontroller:v1.0.0
        securityContext:
          capabilities:
            add:
            - SYS_PTRACE
        imagePullPolicy: Always
        ports:
        - containerPort: 10000
          name: cloudhub
          protocol: TCP
        resources:
          limits:
            cpu: 200m
            memory: 1Gi
          requests:
            cpu: 100m
            memory: 512Mi
        volumeMounts:
        - name: conf
          mountPath: /etc/kubeedge/cloud/conf
        - name: certs
          mountPath: /etc/kubeedge/certs
        - name: kubeconfig
          mountPath: /etc/kubeedge/cloud
      restartPolicy: Always
      serviceAccount: edgecontroller
      serviceAccountName: edgecontroller
      volumes:
      - name: conf
        configMap:
          name: edgecontroller
      - name: certs
        secret:
          secretName: edgecontroller
      - name: kubeconfig
        emptyDir: {}
